function sumArray(arr) {
    // 2. 지금작성하는 코드는 배열을 0번 인덱스 부터 마지막 인덱스 한 칸 전까지 자른 배열의 합을 말합니다.
    if (arr.length == 1) return arr[0];
    return sumArray(arr.slice(0, -1)) + arr[arr.length - 1];
}
// // 1.이제 우리가 하향식으로 재귀함수를 구현하기 위해서
// 이 sumArray 함수가 벌써 구현이 완료되었다고 가정해보겠습니다.
// 그럼 우리는 하위문제의 결과에 마지막 원소만 더해주면 됩니다.

// 2. 지금작성하는 코드는 배열을 0번 인덱스 부터 마지막 인덱스 한 칸 전까지 자른 배열의 합을 말합니다.
// [1,2,3,4,5] 1~4 까지 합을 마지막 인덱스 5를 더해준다고 생각하자
// 3. 이제 기저 조건을 넣어줘야합니다.
// 배열의 원소가 하나일 때는 하나의 원소가 배열의 전체 합을 나타내므로
// 해당 원소를 리턴해주면 됩니다.

// 4. 배열을 [1,2,3,4,5] 을 넣고 sumArray 를 호출해서 1부터 5까지 더합니다.
let arr = [1, 2, 3, 4, 5];
let sum = sumArray(arr);
console.log(sum);
// return 15 가 출력됩니다. 재귀적으로 생각하기가 쉽지 않다...
