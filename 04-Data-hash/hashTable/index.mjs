// 해시테이블 - 개념

// 해시테이블은 프로그래밍 언어에 따라서 조금씩 다른 이름을 가지고 있습니다. 해시 , 맵 , 해시맵 , 딕셔너리 라고 불립니다. 해시 테이블은 이름에서도 알수 있듯이 해시 + 테이블 로 이루어져있는 자료구조입니다.

// 표는 영어로 테이블이라고 합니다 . 이 테이블은 프로그래밍에서 어떻게 저장할까요 ?

// 표를 코드로 표현해보려고 합니다 . 이걸 저장하기 가장 쉬운방법은 배열로 저장하는 것 입니다 . 배열의 각 인덱스를 등번호로 가정하고 내용물을 이름이라고 저장합니다.

// 이게 테이블의 전부입니다 . 간단하죠 ? 테이블은 단점이 존재합니다. 인덱스로 배열에 접근하다 보니 중간중간 빈공간이 존재합니다 . 만약 등번호가 99번인 선수가 있다면 배열의 크기는 100이 되며 그만큼 낭비되는 공간이 발생됩니다.

// 이문제를 해결할수 있을지 고민했습니다 .

// 선수들의 등번호를 어떠한 계산을 거쳐 한 자릿수로 만들어 0~9 의 인덱스에 저장하기로 합니다. 그럼 공간의 낭비가 줄어들겠죠 ? 여기서 어떠한 계산을 하는 함수를 해시 함수라고 합니다. 한번 아주 간단한 해시 함수를 만들어 테스트 해보겠습니다 .

// 우리의 해시 함수는 선수의 등 번호를 10으로 나눈 나머지를 반환하는 함수입니다. 이 해시 함수를 거쳐 선수들의 등 번호 1번부터 배열에 넣어보겠습니다 .

// 1을 10으로 나눈 나머지는 1이기 때문에 똑같이 인덱스 1로 들어가게 됩니다.

// 4도 마찬가지로 인덱스 4로 들어가게 됩니다.

// 20은 10으로 나눈 나머지가 0이기 때문에 0번 인덱스에 들어가게 됩니다 . 6은 10으로 나눈 나머지가 6이기 때문에 6번 인덱스에 들어가게 됩니다.

// 22를 10으로 나눈 나머지는 2이기 때문에 2번 인덱스에 들어가게 됩니다.

// 이런식으로 해시 함수로 테이블의 인덱스를 새로 만들어 지기 때문에 해시 테이블이라고 합니다. 해시 테이블의 성능은 아주 강력합니다 . 해시 테이블은 축구선수들의 등번호는 Key 로 선수 이름은 value 로 키 밸류 .png

// 해시 에티블은 key만 알면 value 에 O(1) 의 성능으로 읽기가 가능합니다. 이뿐만 아니라 삽입,수정 삭제까지 O(1)의 성능을 가집니다.

// 하지만 우리가 지금까지 알아본 해시테이블에는 문제가 있습니다 . 조금전에 축구선수 등번호를 10으로 나눈 나머지를 반환하는 해시 함수를 이용해서 배열의 인덱스를 구했습니다 .

// 여기서 21을 넣어보겠습니다. 나머지는 1입니다. 그래서 1번 인덱스에 넣으려는데 1번에는 이운재 선수가 먼저 들어가 있습니다. 이런경우 충돌이 났다고 말합니다 .

// 충돌이 발생하면 어떻게 해야할까요 ? 둘 중 하나를 버리는 방법도 있겠지만 근본적인 해결방법이 아닌거 같습니다. 충돌을 해결하기 위해서 해당 인덱스를 연결리스트로 구성해 데이터들을 연결합니다.

// 그럼 기존에 있던 선수와 새로 들어온 선수를 모두 같은 인덱스에 저장할수 있게 됩니다. key를 21으로 읽기 요청을 했을때 해시 함수를 거쳐 배열의 1번 인덱스로 접근하게 됩니다.

// 그리고 1번 인덱스에는 연결리스트로 21과 1 두개가 저장되어있으므로 해당 키의 데이터를 만날때 까지 차례대로 접근합니다 .

// 이때 O(n)의 성능을 갖추게 됩니다.

// 등번호가 1번 11번 21번 31번 41번인 선수들을 저장했다는 가정해보겠습니다.

// 여기서 41번 선수를 참조 하고싶습니다. 해시 함수를 거치면 1번 인덱스를 참조합니다. 이경우는 일반 연결리스트를 참조합니다.

// 41을 찾기 위해 연결리스트를 전부 뒤져야합니다.

// O(n)의 성능을 보입니다. 그래서 해시 테이블은 해시 함수의 선정이 굉장히 중요합니다. 좋은 해시 함수는 데이터를 골고루 분배시켜주는 함수입니다. 우리의 예시로 표현한다면 O 부터 9까지 골고루 분배해주는 함수 겠죠 !

// 해시 테이블의 장단점을 정리

// 장점 - 해시테이블의 장점으로는 빠른 데이터 탐색, 삽입 , 삭제를 할수있다는점

// 단점 - 공간의 효율성이 좋지 못해 메모리를 많이 차지함.
// 좋은 해시 함수의 구현은 필수적

// ############################################
// 해시 테이블 구현

// 해시 테이블 - 구현

// 해시 테이블의 추상 자료형

// set - 데이터 삽입

// get - 데이터 읽기 (해당 key 의 밸류를 읽는것 )

// remove - 데이터 제거 는 해당 key 의 value 를 제거하는 기능입니다.
